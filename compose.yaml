services:

  client:
    build:
      context: .
      target: build-node
    command: npm run dev
    volumes:
      - .:/home/node/app
      # node_modules is not shared with the host
      - /home/node/app/node_modules
      - client:/home/node/app/client/dist

  db:
    image: postgres:16-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data/
      - .data/db_dumps:/db_dumps
    healthcheck:
      test: pg_isready -U postgres -d {{ project_name }}
      interval: 5s
      timeout: 10s
      retries: 120
    environment:
      - POSTGRES_DB={{ project_name }}
      - POSTGRES_PASSWORD=postgres

  app:
    <<: &COMMON
      build:
        context: .
        target: build-python
        args:
          UV_EXTRA_DEPENDENCIES: "dev"
      environment:
        - DEBUG=true
        - DJANGO_ENV=development
        - DATABASE_URL=postgres://postgres:postgres@db:5432/{{ project_name }}
        - SECRET_KEY=not-secret
      restart: on-failure
      depends_on:
        db:
          condition: service_healthy
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - ${PORT:-8000}:8000
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - /app/.venv
      - /app/{{ project_name }}.egg-info
      - client:/app/client/dist

  django-migrate:
    <<: *COMMON
    command: python manage.py migrate --noinput
    volumes:
      - .:/app
      - /app/.venv
      - /app/{{ project_name }}.egg-info

volumes:
  client:
  pgdata:
